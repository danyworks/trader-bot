name: '   '
on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: '1.23.6'
      node-version:
        required: false
        type: string
        default: '22.x'
      wails-version:
        required: false
        type: string
        default: 'v2.9.2'
      debug:
        required: false
        type: boolean
        default: false

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: app-linux
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Go Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Node Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: APT Cache
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/*') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Wails Cache
        uses: actions/cache@v4
        with:
          path: ~/go/bin/wails
          key: ${{ runner.os }}-wails-${{ inputs.wails-version }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev
          sudo apt-get install -y libgl1-mesa-dev xorg-dev
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV
          pkg-config --libs webkit2gtk-4.1

      - name: Install Wails
        shell: bash
        run: |
          if [ ! -f ~/go/bin/wails ]; then
            go install github.com/wailsapp/wails/v2/cmd/wails@${{ inputs.wails-version }}
          fi
          
      - name: Build Frontend
        working-directory: frontend
        run: |
          if [ ! -d "node_modules" ]; then
            npm install
          fi
          npm run build

      - name: Debug
        if: ${{ inputs.debug }}
        run: |
          echo "Checking Wails doctor..."
          wails doctor
          echo "Checking Wails version..."
          wails version
          echo "Checking Go version..."
          go version
          echo "Checking Node.js version..."
          node --version
          echo "Checking npm version..."
          npm --version
          echo "Checking path..."
          ls -lah $GITHUB_WORKSPACE

      - name: Build Wails App (Linux)
        run: |
          wails build -platform linux/amd64 -tags webkit2_41

      # - name: Upload Linux Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.artifact_name }}
      #     path: build/bin/*

      # Optional: Sign the apps for production
      # Note: You'll need to set up code signing certificates and secrets
      # - name: Sign Linux App
      #   if: matrix.os == 'ubuntu-latest' && github.event_name == 'release'
      #   run: |
      #     echo "Add your codesigning steps here"