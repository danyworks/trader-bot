name: 'Release'
on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
    inputs:
      target:
        description: "Select platform to build"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - linux
          - macos
          - windows
      debug:
        description: "Enable debug mode"
        required: false
        default: false
        type: boolean

jobs:
  linux:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.target == 'all' || github.event.inputs.target == 'linux'
    uses: ./.github/workflows/build-linux.yml
    with:
      debug: ${{ github.event.inputs.debug == 'true' }}
      artifact_name: trading-bot_linux_amd64
  
  macos:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.target == 'all' || github.event.inputs.target == 'macos'
    uses: ./.github/workflows/build-macos.yml
    with:
      debug: ${{ github.event.inputs.debug == 'true' }}
      artifact_name: trading-bot_macos_arm64

  windows:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.target == 'all' || github.event.inputs.target == 'windows'
    uses: ./.github/workflows/build-windows.yml
    with:
      debug: ${{ github.event.inputs.debug == 'true' }}
      artifact_name: trading-bot_windows_amd64

  release:
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: trading-bot_linux_amd64
          path: artifacts

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: trading-bot_macos_arm64
          path: artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: trading-bot_windows_amd64
          path: artifacts

      - name: Read release message
        id: release_message
        run: echo "message=$(cat RELEASENOTES.md)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*
          body: ${{ steps.release_message.outputs.message }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
